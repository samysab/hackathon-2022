{% extends 'base.html.twig' %}

{% block title %}Hello RapportController!{% endblock %}

{% block body %}
    <h2>home du Front</h2>
    <input type="file" id="fileUpload" />
    <input type="button" id="upload" value="Upload" />
    <hr />
    <div class="d-none" id="step1">
        <h2>Personnalisation du rapport</h2>
        <div class="container">
            <div id="graph_1">
                <div class="row">
                    <div class="col mb-5">
                        <div class="d-flex justify-content-between">
                            <div class="input-group mb-3 mr-2">
                                <label class="input-group-text" for="axeX_1">Axe X</label>
                                <select class="form-select" id="axeX_1" onchange="hideEntete('axeX_1')" >
                                    <option selected>Choose...</option>
                                    <option value="product_code">product_code</option>
                                    <option value="user_id">user_id</option>
                                    <option value="zone_code">zone_code</option>
                                    <option value="score_skinbiosense">score_skinbiosense</option>
                                    <option value="session_id">session_id</option>
                                    <option value="mesure">mesure</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="input-group mb-3">
                            <label class="input-group-text" for="axeY_1">Axe Y</label>
                            <select class="form-select" onchange="getJsonData()" id="axeY_1">
                                <option selected>Choose...</option>
                                <option value="product_code">product_code</option>
                                <option value="user_id">user_id</option>
                                <option value="zone_code">zone_code</option>
                                <option value="score_skinbiosense">score_skinbiosense</option>
                                <option value="session_id">session_id</option>
                                <option value="mesure">mesure</option>
                            </select>
                        </div>
                    </div>
                    <div class="col">
                        <div class="input-group mb-3">
                            <label class="input-group-text" for="typeGraph_1">Type de graphique</label>
                            <select class="form-select" id="typeGraph_1">
                                <option selected>Choose...</option>
                                <option value="bar">Bar</option>
                                <option value="bubble">Bulle</option>
                                <option value="doughnut">Doughnut</option>
                                <option value="line">Line</option>
                                <option value="polarArea">Polar</option>
                                <option value="radar">Radar</option>
                                <option value="scatter">Scatter</option>
                                <!-- TODO !-->
                            </select>
                        </div>
                    </div>
                    <div class="col">
                        <textarea class="form-control" oninput="designPDF()" placeholder="Nommez votre Graph" id="title_1" style="height: 100px"></textarea>
                    </div>
                    <div class="col">
                        <textarea class="form-control" oninput="designPDF()" placeholder="Saisir vos notes d'observation" id="observation_1" style="height: 100px"></textarea>
                    </div>
                    <button type="button" onclick="chart();displayArea()" class="btn btn-outline-success ms-2" id="createChart">Aperçu du graphique</button>
                </div>
                <div id="area">
                <div id="pdf-content" style="text-align: center;display: flex;flex-direction: column;;margin-top: 1em;margin-top: 1emborder-radius: 10px;">

                    <p id="pdf-title-graph1" ></p>
                    <canvas style="height: 70%;padding: 0;margin-right: auto;display: block;width: 600px; align-items: center;" id="myChart"></canvas>
                    <p id="pdf-desc-graph1" ></p>
                    <hr/>
                    <p id="pdf-title-graph2" oninput="designPDF()"></p>
                    <canvas style="height: 70%;padding: 0;margin-right: auto;display: block;width: 600px; align-items: center;" id="myChart2"></canvas>
                    <p id="pdf-desc-graph2" oninput="designPDF()"></p>
                </div>
                </div>
            </div>
        </div>
        <input type="hidden" value="1" id="idxGraph">
        <button type="button" class="btn btn-outline-success ms-2" onclick="addNewgraph()">Ajouter un nouveau graph</button>
    </div>
    <button type="button" onclick="pdfvalid()" class="btn btn-outline-success ms-2 d-none" id="btnCreerRapport">Créer le rapport</button>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js"></script>
    <script src="{{ asset('html2pdf.bundle.min.js')}}"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script type="text/javascript">

        axeYdata = [];
        axeXdata = [];
        axeY2data = [];
        axeX2data = [];
        axeX1 = '';
        axeY1 = '';
        axeX2 = '';
        axeY2 = '';
        datajson = [];
        rows = '';

        function displayArea(){
            const area = document.getElementById('area');
            area.style.boxShadow = "aqua";
            area.style.border = "solid 3px #7d7dd2";
        }

        function designPDF (){
            const numberCharts = $("div[id^='graph_']").length;
            const title = document.getElementById('title_1').value;
            const titleForPDF = document.getElementById('pdf-title-graph1');
            if(numberCharts > 1){
                const title2 = document.getElementById('title_2').value;
                const titleForPDF2 = document.getElementById('pdf-title-graph2');
                const desc2 = document.getElementById('observation_2').value;
                const descForPDF2 = document.getElementById('pdf-desc-graph2');
                descForPDF2.innerHTML = desc2;
                titleForPDF2.innerHTML = title2;
            }
            const desc = document.getElementById('observation_1').value;
            const descForPDF = document.getElementById('pdf-desc-graph1');
            descForPDF.innerHTML = desc;
            titleForPDF.innerHTML = title;
        }

        // GENERATE PDF
        function generatePDF() {
            // Choose the element that our invoice is rendered in.
            const element = document.getElementById('pdf-content');

            console.log(element);
            var opt = {
                margin:       [1, 0, 0, 0],
                pagebreak:    { after: 'canvas' },
                filename:     'Rapport.pdf',
                html2canvas:  { scale: 2 },
                jsPDF:        { unit: 'cm', format: 'A4', orientation: 'portrait' }
            };

        // New Promise-based usage:
             html2pdf().set(opt).from(element).save();
            // Choose the element and save the PDF for our user.
        }

        function pdfvalid()
        {
            const pdf = setTimeout(generatePDF, 2000);
        }

        //UPLOAD FILE
        $("body").on("click", "#upload", function () {
            //Reference the FileUpload element.
            var fileUpload = $("#fileUpload")[0];

            //Validate whether File is valid Excel file.
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
            if (regex.test(fileUpload.value.toLowerCase())) {
                if (typeof (FileReader) != "undefined") {
                    var reader = new FileReader();

                    //For Browsers other than IE.
                    if (reader.readAsBinaryString) {
                        reader.onload = function (e) {
                            ProcessExcel(e.target.result);
                        };
                        reader.readAsBinaryString(fileUpload.files[0]);
                    } else {
                        //For IE Browser.
                        reader.onload = function (e) {
                            var data = "";
                            var bytes = new Uint8Array(e.target.result);
                            for (var i = 0; i < bytes.byteLength; i++) {
                                data += String.fromCharCode(bytes[i]);
                            }
                            ProcessExcel(data);
                        };
                        reader.readAsArrayBuffer(fileUpload.files[0]);
                    }
                } else {
                    alert("This browser does not support HTML5.");
                }
            } else {
                alert("Please upload a valid Excel file.");
            }
        });
        function ProcessExcel(data) {
            //Read the Excel File data.
            var workbook = XLSX.read(data, {
                type: 'binary'
            });

            //Fetch the name of First Sheet.
            var firstSheet = workbook.Sheets[workbook.SheetNames[1]];

// Les lignes au format JSON

            rows = XLSX.utils.sheet_to_json(firstSheet);

                //Read all rows from First Sheet into an JSON array.
            var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[firstSheet]);

            //Create a HTML Table element.
            var table = $("<table />");
            table[0].border = "1";

            //Add the header row.
            var row = $(table[0].insertRow(-1));

            //Add the header cells.
            var headerCell = $("<th />");
            headerCell.html("product_code");
            row.append(headerCell);

            var headerCell = $("<th />");
            headerCell.html("user_id");
            row.append(headerCell);

            var headerCell = $("<th />");
            headerCell.html("zone_code");
            row.append(headerCell);

            var headerCell = $("<th />");
            headerCell.html("score_skinbiosense");
            row.append(headerCell);

            var headerCell = $("<th />");
            headerCell.html("session_id");
            row.append(headerCell);

            var headerCell = $("<th />");
            headerCell.html("mesure");
            row.append(headerCell);

            //Add the data rows from Excel file.

            $('#step1').removeClass("d-none");
            $("#btnCreerRapport").removeClass("d-none");
        };

        // AXE X REMOVE PARAMETERS
        function hideEntete(id) {
            axeX1 = $('#axeX_1').val();

            let idxtmp = id.split("_")
            let idx = idxtmp[1]
            $("#axeY_"+idx+" option").each( function () {
                if ($("#axeX_"+idx).val() === $(this).val()){
                    $(this).addClass('d-none')
                }else{
                    $(this).removeClass('d-none')
                }
            })
        }

        function getJsonData(){
            axeY1 = $('#axeY_1').val();
            console.log(axeY1);
            for (const row of rows) {
                axeYdata.push(row[axeY1]);
                axeXdata.push(row[axeX1]);
            }
            console.log(axeXdata);
            console.log(axeYdata);
        }
        function getJsonData2(){
            axeX2 = $('#axeX_2').val();

            axeY2 = $('#axeY_2').val();
            console.log(axeY2);
            for (const row of rows) {
                axeY2data.push(row[axeY2]);
                axeX2data.push(row[axeX2]);
            }
            console.log(axeX2data);
            console.log(axeY2data);
        }

        // ADD NEW PARAMETERS CHART
        function addNewgraph(){
            let idx = parseInt($('#idxGraph').val())
            idx += 1
            $('#idxGraph').val(idx)
            let html = '<div id="graph_'+idx+'">' +
                '               <div class="row mb-4">\n' +
                '                    <div class="col">\n' +
                '                        <div class="d-flex justify-content-between">\n' +
                '                            <div class="input-group mb-3 mr-2">\n' +
                '                                <label class="input-group-text" for="axeX_'+idx+'">Axe X</label>\n' +
                '                                <select class="form-select"  id="axeX_'+idx+'" onchange="hideEntete(\'axeX_'+idx+'\')">\n' +
                '                                    <option selected>Choose...</option>\n' +
                '                                    <option value="product_code">product_code</option>\n' +
                '                                    <option value="user_id">user_id</option>\n' +
                '                                    <option value="zone_code">zone_code</option>\n' +
                '                                    <option value="score_skinbiosense">score_skinbiosense</option>\n' +
                '                                    <option value="session_id">session_id</option>\n' +
                '                                    <option value="mesure">mesure</option>\n' +
                '                                </select>\n' +
                '                            </div>\n' +
                '                        </div>\n' +
                '                    </div>\n' +
                '                    <div class="col">\n' +
                '                        <div class="input-group mb-3">\n' +
                '                            <label class="input-group-text" for="axeY_'+idx+'">Axe Y</label>\n' +
                '                            <select class="form-select" onchange="getJsonData2()" id="axeY_'+idx+'">\n' +
                '                                <option selected>Choose...</option>\n' +
                '                                <option value="product_code">product_code</option>\n' +
                '                                <option value="user_id">user_id</option>\n' +
                '                                <option value="zone_code">zone_code</option>\n' +
                '                                <option value="score_skinbiosense">score_skinbiosense</option>\n' +
                '                                <option value="session_id">session_id</option>\n' +
                '                                <option value="mesure">mesure</option>\n' +
                '                            </select>\n' +
                '                        </div>\n' +
                '                    </div>\n' +
                '                    <div class="col">\n' +
                '                        <div class="input-group mb-3">\n' +
                '                            <label class="input-group-text" for="typeGraph_'+idx+'">Type de graphique</label>\n' +
                '                            <select class="form-select" id="typeGraph_'+idx+'">\n' +
                '                                <option selected>Choose...</option>\n' +
                '                                <option value="bar">Bar</option>\n' +
                '                                <option value="bubble">Bulle</option>\n' +
                '                                <option value="doughnut">Doughnut</option>\n' +
                '                                <option value="line">Ligne</option>\n' +
                '                                <option value="polarArea">Polar</option>\n' +
                '                                <option value="radar">Radar</option>\n' +
                '                                <option value="scatter">Scatter</option>' +
                '                            </select>\n' +
                '                        </div>\n' +
                '                    </div>\n' +
                '                   <div class="col">\n' +
                '                       <textarea class="form-control" placeholder="Nommez votre Graph" id="title_2" style="height: 100px"></textarea>\n' +
                '                   </div>\n' +
                '                   <div class="col">\n' +
                '                       <textarea class="form-control" placeholder="Saisir vos notes d\'observation" id="observation_2" style="height: 100px"></textarea>\n' +
                '                   </div>\n' +
                '                   <button type="button" onclick="chart2()" class="btn btn-outline-success ms-2" id="createChart2">Aperçu du graphique</button>\n' +
            '                </div>\n'

            $(".container").append(html)
        }

        function chart () {
            // CHART

            if(window.myChart instanceof Chart)
            {
                axeYdata = [];
                axeXdata = [];
                window.myChart.destroy();
                getJsonData();
            }

           if(window.myChart2 instanceof Chart)
            {
                axeY2data = [];
                axeX2data = [];
                window.myChart2.destroy();
                getJsonData2();
            }

            const typeGraph = $('#typeGraph_1').val();

                const data = {
                    labels: axeXdata,
                    datasets: [{
                        label: 'My First dataset',
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderColor: 'rgb(255, 99, 132)',
                        data: axeYdata,
                    }]
                };

            const config = {
                type: typeGraph,
                data: data,
                options: {}
            };

                window.myChart = new Chart(
                    document.getElementById('myChart'),
                    config
                );

        }

        function chart2 () {
            // CHART

            if(window.myChart2 instanceof Chart)
            {
                axeY2data = [];
                axeX2data = [];
                window.myChart.destroy();
                getJsonData2();
            }

            const typeGraph2 = $('#typeGraph_2').val();

            const data2 = {
                labels: axeX2data,
                datasets: [{
                    label: 'My First dataset',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: axeY2data,
                }]
            };

            const config2 = {
                type: typeGraph2,
                data: data2,
                options: {}
            };

            window.myChart2 = new Chart(
                document.getElementById('myChart2'),
                config2
            );

        }
    </script>

{% endblock %}